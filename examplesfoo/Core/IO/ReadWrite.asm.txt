; ReadWrite: Read a string and write it.
; Illustrate both input and output.
; Sigma16: https://jtod.github.io/home/Sigma16/  John O'Donnell, 2023

; Read up to 4 characters into str
        lea    R1,1[R0]       ; trap code for Read
        lea    R2,str[R0]     ; R2 := address of input buffer str
        lea    R3,4[R0]       ; R3 := size of input buffer
        trap   R1,R2,R3       ; read into str

; Write what was just read
        lea    R1,2[R0]       ; trap code for Write
        lea    R2,str[R0]     ; R2 := address of input buffer str
;                             ; R3 is amount that was actually read
        trap   R1,R2,R3       ; write str
        add    R5,R3,R0       ; temp R5 = R3 = amount read

; Read up to 2 characters into str
        lea    R1,1[R0]       ; trap code for Read
        lea    R2,str[R0]     ; R2 := address of input buffer str
        lea    R3,2[R0]       ; R3 := size of input buffer
        trap   R1,R2,R3       ; read into str

; Write what was just read
        lea    R1,2[R0]       ; trap code for Write
        lea    R2,str[R0]     ; R2 := address of input buffer str
;                             ; R3 is amount that was actually read
        trap   R1,R2,R3       ; write str
        add    R5,R3,R0       ; temp R5 = R3 = amount read

; Write a separator
        lea    R1,2[R0]       ; trap code for Write
        lea    R2,sepstr[R0]  ; R2 = &separator string
        lea    R3,1[R0]       ; print 1 character
        trap   R1,R2,R3

        trap   R0,R0,R0       ; terminate

str     data   97   ; 'a'
        data   98   ; 'b'
        data   99   ; 'c'
        data  100   ; 'd'
        data  101   ; 'e'
        data  102   ; 'f'
        data  103   ; 'g'
        data   10   ;  newline

sepstr  data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'
        data   97   ; 'a'

