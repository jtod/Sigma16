; ArrayMax: Find maximum element of an array.
; A loop that traverses an array and returns the largest element.
; Sigma16: https://jtod.github.io/home/Sigma16  John O'Donnell, 2023

;---------------------------------------------------------------------
; The program finds the maximum element of an array.  It is given
;   *  a natural number n, assume n>0
;   *  an n-element array x[0], x[1], ..., x[n-1]
; and it calculates
;   * max = the maximum element of x

; Since n>0, the array x contains at least one element, and a maximum
; element is guaranteed to exist.

;---------------------------------------------------------------------
; High level algorithm

;   max := x[0]
;   for i := 1 to n-1 step 1
;       if x[i] > max
;         then max := x[i]

;---------------------------------------------------------------------
; Low level algorithm

;     max := x[0]
;     i := 1
; forloop:
;     if i >= n then goto done
;     if x[i] <= max then goto skip
;     max := x[i]
; skip:
;     i := i + 1
;     goto forloop
; done:
;     terminate

;---------------------------------------------------------------------
; Assembly language

; Register usage
;   R1 = constant 1
;   R2 = n
;   R3 = i
;   R4 = max

; Initialise
       lea    R1,1[R0]         ; R1 = constant 1
       load   R2,n[R0]         ; R2 = n
; max := x[0]
       load   R4,x[R0]         ; R4 = max = x[0]
; i := 1
       lea    R3,1[R0]         ; R3 = i = 1

; Top of loop, determine whether to remain in loop
forloop
; if i >= n then goto done
       cmp    R3,R2            ; compare i, n
       jumpge done[R0]         ; if i>=n then goto done

; if x[i] <= max then goto else
       load   R5,x[R3]         ; R5 = x[i]
       cmp    R5,R4            ; compare x[i], max
       jumple skip[R0]         ; if x[i] <= max then goto skip

; max := x[i]
       add   R4,R5,R0          ; max := x[i]

skip
; i := i + 1
       add    R3,R3,R1         ; i = i + 1
; goto forloop
       jump   forloop[R0]      ; go to top of forloop

; Exit from forloop
done   store R4,max[R0]        ; max = R4
; terminate
       trap  R0,R0,R0          ; terminate

; Data area
; With the following data, the expected result is 40 (0028)

n        data   6
max      data   0
x        data  18
         data   3
         data  21
         data  -2
         data  40
         data  25
