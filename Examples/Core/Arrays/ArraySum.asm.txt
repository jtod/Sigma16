; ArraySum: Find sum of the elements of an array.
; A loop that iterates over an array and adds the elements.
; Sigma16: https://jtod.github.io/home/Sigma16  John O'Donnell, 2023

; The program is given
;   *  a natural number n, assume n >= 0
;   *  an n-element array x[0], x[1], ..., x[n-1]
;  It calculates
;   * sum = the sum x[0] + x[1] + ... + x[n-1]
;     If n=0 the sum should be 0.

;---------------------------------------------------------------------
; Algorithm in high level pseudocode

; program ArraySum
;   sum := 0
;   i := 0
;   while i < n do
;     sum := sum + x[i]
;     i := i + 1

;---------------------------------------------------------------------
; Algorithm in low level pseudocode

;    sum := 0
;    i := 0
; whileloop:
;    if i >= n then goto done
;    sum := sum + x[i]
;    i := i + 1
;    goto whileloop
; done:
;    terminate

;---------------------------------------------------------------------
; Assembly language

; Register usage
;   R1 = constant 1
;   R2 = n
;   R3 = i
;   R4 = sum

; Initialise R1=1, R2=n=0, R3=i=0, R4=sum=0

       lea    R1,1[R0]       ; R1 = constant 1
       load   R2,n[R0]       ; R2 = n
; sum := 0
       add    R4,R0,R0       ; R4 = sum = 0
; i := 0
       add    R3,R0,R0       ; R3 = i = 0

; Top of loop, determine whether to remain in loop
whileloop
; if i >= n then goto done
       cmp    R3,R2          ; compare i, n
       jumpge done[R0]       ; if i>=n then goto done

; sum := sum + x[i]
       load   R5,x[R3]       ; R5 = x[i]
       add    R4,R4,R5       ; sum := sum + x[i]

; i := i + 1
       add    R3,R3,R1       ; i = i + 1

; goto whileloop
       jump   whileloop[R0]  ; goto whileloop

done   store  R4,sum[R0]     ; sum := R4
       trap   R0,R0,R0       ; terminate

; Data area
; With the following initial values, the expected result
;   = 18 + -33 + 21 + -2 + 40 + 25
;   = 69 = hex 0045

n        data   6
sum      data   0
x        data  18
         data -33
         data  21
         data  -2
         data  40
         data  25
