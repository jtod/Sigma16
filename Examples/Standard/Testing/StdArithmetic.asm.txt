; StdArithmetic: Test cases for arithmetic.
; Add with carry, multiply and divide on natural numbers.
; Sigma16: https://jtod.github.io/home/Sigma16  John O'Donnell, 2023

; addc is the "add with carry" instruction.  It's useful for addition
; of large natural numbers that require several words.  The
; instruction uses the carry bit in the condition code (R15) as the
; carry input, and it overwrites the carry bit with the carry output
; of the addition.  There is no overflow.  The numbers used here are
; binary natural numbers.
  
     lea   R1,$f000[R0]  ; R1 = f000
     lea   R2,$f001[R0]  ; R2 = f001
     add   R3,R1,R2      ; R3 = e001 with carry = 1
     lea   R4,2[R0]      ; R4 = 0002
     addc  R5,R4,R4      ; R5 = 0005  2 + 2 + 1 (carry), clear carry bit
     addc  R6,R4,R4      ; R6 = 0004  2 + 2 + 0 (carry), clear carry bit
     trap  R0,R0,R0      ; terminate

; Overflows

      lea    R1,$ffff
      lea    R2,1
      add    R3,R1,R2       ; R3 = 0000, R15 = 

; addc: add with carry

      add    R15,R0,R0
      lea    R1,$ffff[R0]
      addc   R2,R1,R1
      add    R15,R0,R0
      lea    R1,3[R0]
      addc   R2,R1,R1

; muln

      lea    R1,10000[R0]
      lea    R2,10000[R0]
      muln   R3,R1,R2       ; result in R3 and R15


; divn

      lea    R1,10000[R0]
      lea    R2,10000[R0]
      divn   R3,R1,R2       ;  dividend in R1,R15, q in R3, rem in R15

      trap   R0,R0,R0
