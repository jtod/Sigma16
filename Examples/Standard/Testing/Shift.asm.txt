; Shift: Test the shift instructions.
; Instructions shiftl, shiftr
; Sigma16: https://jtod.github.io/home/Sigma16  John O'Donnell, 2025

;    shiftl Rd,Re,h
;      effect:  Rd := Re shl h
;      Rd = first operand register and destination register
;      Re = second operand register
;      f = unused
;      g = unused
;      h = constant shift distance
;      format: EXP/RRk
;      machine language: Ed04 efgh (op=$E, ab=$03)
     lea    R1,2[R0]   ;           R2 = 0002  0000 0000 0000 0010
     shiftl R5,R1,4    ; E503 1004 R5 = 0020  0000 0000 0010 0000

;    shiftr Rd,Re,h
;      effect:  Rd := Re shr h
;      Rd = first operand register and destination register
;      Re = second operand register
;      f = unused
;      g = unused
;      h = constant shift distance
;      format: EXP/RRk
;      machine language: Ed04 efgh (op=$E, ab=$04)

  lea    R1,2[R0]   ; R2 = 0002   0000 0000 0000 0010
  shiftl R5,R1,4    ; R5 = 0020   0000 0000 0010 0000
  shiftl R6,R1,13   ; R6 = 4000   0100 0000 0000 0000
  shiftr R7,R6,3    ; R7 = 0800   0000 1000 0000 0000
  shiftr R7,R7,11   ; R7 = 0001   0000 0000 0000 0001

; Shift test data
    lea     R1,$0040[R0] ; 0000 0000 0100 0000

; shiftr instruction
    shiftr  R2,R1,1      ; 0000 0000 0100 0000 -> 0000 0000 0010 0000 = 0020
    shiftr  R2,R2,1      ; 0000 0000 0010 0000 -> 0000 0000 0001 0000 = 0010
    shiftr  R2,R2,1      ; 0000 0000 0001 0000 -> 0000 0000 0000 1000 = 0008
    shiftr  R3,R1,5      ; 0000 0000 0100 0000 -> 0000 0000 0000 0010 = 0002

; shiftl instruction
    shiftl  R4,R1,1      ; 0000 0000 0100 0000 -> 0000 0000 1000 0000 = 0080
    shiftl  R5,R1,7      ; 0000 0000 0100 0000 -> 0010 0000 0000 0000 = 2000

    trap   R0,R0,R0
