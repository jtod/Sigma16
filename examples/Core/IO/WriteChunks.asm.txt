; WriteChunks: Write several short strings on the same output line.
; Trap write doesn't terminate line of output unless \n character is given.
; Sigma16: https://jtod.github.io/home/Sigma16/  John O'Donnell, 2023

        lea    R1,2[R0]       ; trap code for Write

        lea    R2,a[R0]       ; R3 := address of string
        lea    R3,2[R0]       ; R2 := length of string
        trap   R1,R2,R3       ; write string

        lea    R2,c[R0]       ; R3 := address of string
        lea    R3,1[R0]       ; R2 := length of string
        trap   R1,R2,R3       ; write string

        lea    R2,d[R0]       ; R3 := address of string
        lea    R3,3[R0]       ; R2 := length of string
        trap   R1,R2,R3       ; write string

        lea    R2,g[R0]       ; R3 := address of string
        lea    R3,1[R0]       ; R2 := length of string
        trap   R1,R2,R3       ; write string

        lea    R2,h[R0]       ; R3 := address of string
        lea    R3,2[R0]       ; R2 := length of string
        trap   R1,R2,R3       ; write string

; Write str2
        lea    R1,2[R0]       ; trap code for Write
        lea    R2,str2[R0]    ; R3 := address of string str1
        lea    R3,12[R0]       ; R2 := length of string = 9
        trap   R1,R2,R3       ; write str1

; Write str3 with embedded newlines
        lea    R1,2[R0]       ; trap code for Write
        lea    R2,str3[R0]    ; R3 := address of string
        lea    R3,11[R0]      ; R2 := length of string
        trap   R1,R2,R3       ; write

; Write str4
        lea    R1,2[R0]       ; trap code for Write
        lea    R2,str4[R0]    ; R3 := address of string
        lea    R3,4[R0]       ; R2 := length of string
        trap   R1,R2,R3       ; write

        trap   R0,R0,R0       ; terminate

a       data   97   ; character code for 'a'
b       data   98   ; character code for 'b'
c       data   99   ; character code for 'c'
d       data  100   ; character code for 'd'
e       data  101   ; character code for 'e'
f       data  102   ; character code for 'f'
g       data  103   ; character code for 'g'
h       data  104   ; character code for 'h'
newline data   10   ; character code for newline

str2    data $03b1   ; 03b1 is Greek alpha in Unicode
        data $03b2
        data $03b3
        data $03b4
        data $03b5
        data $03b6
        data $03b7
        data $03b8
        data $03b9
        data $03ba
        data $03bb
        data   10   ; character code for newline

str3    data   97   ; character code for 'a'
        data   97   ; character code for 'a'
        data   98   ; character code for 'b'
        data   99   ; character code for 'c'
        data   98   ; character code for 'b'
        data   10   ; character code for newline
        data   99   ; character code for 'c'
        data  100   ; character code for 'd'
        data  101   ; character code for 'e'
        data   10   ; character code for newline
        data  102   ; character code for 'f'


str4    data  122   ; 'z'
        data  121   ; 'y'
        data  120   ; 'x'
        data   10   ; character code for newline
