; SumCount: Traverse array and calculate two values.
; Iterate over an array, maintaining sum and count of negative elements.
; Sigma16: https://jtod.github.io/home/Sigma16  John O'Donnell, 2023

; Traverse array and calculate two values, possum and negcount

; The program is given
;  --  a natural number n
;  --  an n-element array x[0], x[1], ..., x[n-1]
;  It calculates
;  -- possum = the sum of the nonnegative elements of x
;  -- negcount = the number of negative elements of x

;   possum := 0
;   negcount := 0
;   for i := 0 to n-1 step 1
;       if x[i] >= 0
;         then possum := possum + x[i]
;         else negcount := negcount + 1

; Register usage
;   R1 = n
;   R2 = i
;   R3 = possum
;   R4 = negcount
;   R5 = constant 1

; Initialise
       load  R1,n[R0]          ; R1 = n
       add   R2,R0,R0          ; i = 0
       add   R3,R0,R0          ; possum = 0
       add   R4,R0,R0          ; negcount = 0
       lea   R5,1[R0]          ; R5 = constant 1

; Top of loop, determine whether to remain in loop

loop
       cmp     R2,R1            ; compare i, n
       jumpge  done[R0]         ; if i >= n then goto done

; Find out whether x[i] is negative or nonnegative
       load    R6,x[R2]         ; R6 = x[i]
       cmp     R6,R0            ; compare x[i], 0
       jumplt  neg[R0]          ; if x[i] < 0 then goto neg

; We have x[i] >= 0
       add     R3,R3,R6         ; possum = possum + x[i]
       jump    next[R0]         ; goto bottom of loop

; We have x[i] < 0
neg    add     R4,R4,R5         ; negcount = negcount + 1

; Bottom of loop, increment loop index
next   add     R2,R2,R5         ; i = i + 1
       jump    loop[R0]         ; go to top of loop

; Exit from loop
done   store   R3,possum[R0]    ; possum = R3
       store   R4,negcount[R0]  ; negcount = R4
       trap    R0,R0,R0         ; terminate

; With these data values, expected results are
;   possum   = 91 + 100 + 42 = 233 (00e9)
;   negcount = 4 (0004)

n        data  8
possum   data  0
negcount data  0

x        data  -13
         data   91
         data   -4
         data    0
         data   -1
         data  100
         data   42
         data  -30
